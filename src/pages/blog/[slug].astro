---
import BlogPostLayout from '../../layouts/BlogPostLayout.astro'
import Wrapper from '../../layouts/Wrapper.astro'
import { client } from '../../lib/sanityClient'
import { AllPosts, SinglePost } from '../../lib/api'
import { getSanityImageUrl } from '../../utils/helpers'
import { Post } from '../../types/sanity-types.d'
import { formatBlogPostDate } from '../../utils/helpers'
import { Code } from 'astro/components'
import { PortableTextComponentsProvider ,PortableText } from '@portabletext/react'

const { post } = Astro.props

export async function getStaticPaths() {
  const params = {slug: post.slug.current }
  const allBlogPosts = await client.fetch(SinglePost, params)

  return await allBlogPosts.map((post: Post) => ({
    params: { slug: post.slug.current },
    props: { post },
  }))
}

---

<BlogPostLayout
  title={post.title}
  ogImageUrl={getSanityImageUrl(post.mainImage).width(1200).url()}
>
  <Wrapper> 
      <article class="type dark:type-invert px-5 max-w-full">
        {post.mainImage && (
        <img width="720" height="420" class="post-main__img" loading="lazy" src={getSanityImageUrl(post.mainImage).url()} />
        )}
        <h1>{post.title}</h1>
        <time>{formatBlogPostDate(post.publishedAt)}</time>
        {post.author && <p>By {post.author.name}</p>}
    
        {post.body.map((block: any) => (
          (block._type == 'code') 
          ?
          <Code code={block.code} lang={block.language} theme={'github-dark'} />
          :
          <PortableText value={block} />
          ))}
      </article>
  </Wrapper>
</BlogPostLayout>
